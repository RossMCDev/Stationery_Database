@model Stationers.Models.Stationary

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>

@using (Html.BeginForm())
{

    <h4>
        Item
    </h4>
    
            @Html.HiddenFor(model => model.Stationary_ID)

    <div class="form-horizontal">
        <h4>
            Edit Item

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Subject</label>
            @*@Html.EditorFor(model => model.ForSubject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ForSubject, "", new { @class = "text-danger" })*@
            @Html.DropDownListFor(model => model.ForSubject, Stationers.Models.Stationary.SubjectList, new { htmlAttributes = new { @class = "form-control" } })
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control"} })
            @*@Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<input id="Height" type="text" />
                <input id="Width" type="text" />
                <input id="Depth" type="text" />*@
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

        <br>
    <h4>
         Stock
    </h4>
    
        <table class="table">
        
        @for (var i = 0; i < Model.Variants.Count; i++)
{
                        @Html.HiddenFor(model => Model.Variants[i].Stationary_ID)
                        @Html.HiddenFor(model => Model.Variants[i].Variant_ID)


            <tr>
                <td>
                    @Html.EditorFor(modelItem => Model.Variants[i].Colour)
                </td>
                <td>
                    
                    @Html.CheckBoxFor(model => Model.Variants[i].Stocked)
                    In Stock
                </td>
                <td>
                    @Html.LabelFor(model => Model.Variants[i].Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => Model.Variants[i].Status, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                @Html.ActionLink("Delete record", "DeleteVariant", new { id = Model.Variants.ToList()[i].Variant_ID, eid = Model.Stationary_ID })
                </td>
            </tr>
            
        }
        </table>
    
      <br>

    <input type="submit" value="Save" />

    
        
    <div>
        @Html.ActionLink("Back to main list", "Index")
    </div>
}
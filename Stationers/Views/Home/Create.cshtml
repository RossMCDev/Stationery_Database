@model Stationers.Models.Stationary

@{
    ViewBag.Title = "Create";
 }

    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
   
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label col-md-2"><b>Subject</b></label>
                @Html.DropDownListFor(model => model.ForSubject, Stationers.Models.Stationary.SubjectList, htmlAttributes: new { @class = "form-control" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })


            </div>





                    <input type="submit" value="Create" class="btn" />

            </div>
        <div>
            @Html.ActionLink("Back to listing", "Index")
        </div>
    }

